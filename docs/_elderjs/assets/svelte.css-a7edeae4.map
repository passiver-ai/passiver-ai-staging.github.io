{"version":3,"sources":["../src/routes/src/routes/src/routes/src/routes/src/routes/src/routes/src/routes/src/routes/src/routes/src/routes/src/routes/src/routes/hooks/Hooks.svelte","../src/src/src/src/src/src/src/src/src/src/src/src/src/src/src/src/src/src/components/HookDetail.svelte","../src/src/src/src/src/src/src/src/src/src/src/src/components/Clock.svelte"],"names":[],"mappings":"AASE,gBACE,cAAe,KACf,QAAS,aCJX,kCACE,QAAS,MACT,cAAe,OACf,UAAW,KAGP,wCACJ,OAAQ,KAGV,kCACE,UAAW,KACX,cAAe,KACf,QAAS,KACT,OAAQ,IAAI,MAAM,KAClB,gBAAiB,SACjB,cAAe,KACf,cAAe,KACf,SAAU,SACV,WAAY,MAGd,yCACE,SAAU,SACV,IAAK,EACL,MAAO,IACP,MAAO,KACP,OAAQ,QACR,wBAAyB,KACzB,0BAA2B,KAC3B,WAAY,OACZ,YAAa,IACb,WAAY,KACZ,UAAW,KAGb,sCACE,aAAc,KAGQ,yBACF,kDAClB,YAAa,OAEI,iDACjB,aAAc,QAIlB,iCACE,UAAW,KAEL,QACN,aAAc,KAGhB,sCACE,cAAe,QACf,eAAgB,QAChB,cAAe,IAAI,MAAM,KC3C3B,kBACE,MAAO,KACP,OAAQ,KACR,WAAY,KAGd,0BACE,OAAQ,KACR,KAAM,MAGR,qBACE,OAAQ,KACR,aAAc,IAGhB,qBACE,OAAQ,KACR,aAAc,EAGhB,oBACE,OAAQ,KAGV,sBACE,OAAQ,KAGV,sBACA,oCACE,OAAqB,eAGvB,oCACE,aAAc","sourcesContent":["<script>\n  import HookDetail from '../../components/HookDetail.svelte';\n\n  export let data;\n  export let request;\n  export let settings;\n</script>\n\n<style>\n  a {\n    margin-bottom: 1rem;\n    display: inline-block;\n  }\n</style>\n\n<svelte:head>\n  <title>{data.hook.hook} Hook Interface: Elder.js Example Project</title>\n  <meta name=\"description\" content=\"Hook details for {data.hook.hook} in Elder.js from the Hook Interface\" />\n  <link href=\"{settings.origin}{request.permalink}\" rel=\"canonical\" />\n</svelte:head>\n\n<a href=\"/\">&LeftArrow; Home</a>\n\n<h1>Elder.js Hook: {data.hook.hook}</h1>\n\n<HookDetail {...data} />\n\n<img\n  src=\"https://elderguide.com/images/elderjs-hooks-v100.png\"\n  alt=\"Elder.js hook Lifecycle\"\n  style=\"max-width:100%; margin:1rem 0;\" />\n","<script>\n  export let hook;\n  export let i;\n  export let hookEntityDefinitions;\n</script>\n\n<style>\n  .list {\n    display: block;\n    margin-bottom: 0.5rem;\n    font-size: 13px;\n  }\n\n  .list .code {\n    cursor: help;\n  }\n\n  .hook {\n    max-width: 100%;\n    text-overflow: wrap;\n    padding: 1rem;\n    border: 1px solid #ddd;\n    border-collapse: collapse;\n    margin-bottom: 1rem;\n    border-radius: 1rem;\n    position: relative;\n    background: white;\n  }\n\n  .hook-number {\n    position: absolute;\n    top: 0;\n    right: 0px;\n    width: 2rem;\n    height: 1.75rem;\n    border-top-right-radius: 1rem;\n    border-bottom-left-radius: 1rem;\n    text-align: center;\n    padding-top: 3px;\n    background: #ddd;\n    font-size: 14px;\n  }\n\n  .overview {\n    margin-right: 1rem;\n  }\n\n  @media (min-width: 768px) {\n    .hook:nth-child(even) {\n      margin-left: 0.5rem;\n    }\n    .hook:nth-child(odd) {\n      margin-right: 0.5rem;\n    }\n  }\n\n  .use {\n    font-size: 14px;\n  }\n  :global(.use ul) {\n    padding-left: 1rem;\n  }\n\n  .overview {\n    margin-bottom: 0.75rem;\n    padding-bottom: 0.75rem;\n    border-bottom: 1px solid #ddd;\n  }\n</style>\n\n<div class=\"hook\">\n  {#if i || i === 0}<span class=\"hook-number\">{i + 1}.</span>{/if}\n\n  <div class=\"overview\">\n    <span class=\"hook-name\">\n      {#if hook.link && hook.link.length > 0}<a href={hook.link}>{hook.hook}</a>{:else}{hook.hook}{/if}\n    </span>\n    : {hook.context}\n  </div>\n  <div class=\"use\">\n    {@html hook.use}\n  </div>\n\n  <div class=\"list\">\n    <strong>Props</strong> : {#each hook.props as prop}\n      <div class=\"code\" data-balloon-length=\"medium\" data-balloon-pos=\"up\" aria-label={hookEntityDefinitions[prop]}>\n        {prop}\n      </div>\n    {/each}\n  </div>\n  <div class=\"list\">\n    <strong>Mutable</strong> : {#each hook.mutable as mutable}\n      <div class=\"code\" data-balloon-length=\"medium\" data-balloon-pos=\"up\" aria-label={hookEntityDefinitions[mutable]}>\n        {mutable}\n      </div>\n    {/each}\n  </div>\n\n  {#if hook.advanced}\n    <div><small>This hook is an 'advanced' hook meaning it geared towards advanced users or plugins.</small></div>\n  {/if}\n\n  <small>{hook.expiremental ? 'Expiremental' : 'Stable'} &middot; Location: {hook.location}</small>\n</div>\n","<script>\n  import { onMount } from 'svelte';\n\n  let time = new Date();\n\n  // these automatically update when `time`\n  // changes, because of the `$:` prefix\n  $: hours = time.getHours();\n  $: minutes = time.getMinutes();\n  $: seconds = time.getSeconds();\n\n  onMount(() => {\n    const interval = setInterval(() => {\n      time = new Date();\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n</script>\n\n<style>\n  svg {\n    width: 100%;\n    height: 100%;\n    margin-top: 2rem;\n  }\n\n  .clock-face {\n    stroke: #333;\n    fill: white;\n  }\n\n  .minor {\n    stroke: #999;\n    stroke-width: 0.5;\n  }\n\n  .major {\n    stroke: #333;\n    stroke-width: 1;\n  }\n\n  .hour {\n    stroke: #333;\n  }\n\n  .minute {\n    stroke: #666;\n  }\n\n  .second,\n  .second-counterweight {\n    stroke: rgb(180, 0, 0);\n  }\n\n  .second-counterweight {\n    stroke-width: 3;\n  }\n</style>\n\n<svg viewBox=\"-50 -50 100 100\">\n  <circle class=\"clock-face\" r=\"48\" />\n\n  <!-- markers -->\n  {#each [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] as minute}\n    <line class=\"major\" y1=\"35\" y2=\"45\" transform=\"rotate({30 * minute})\" />\n\n    {#each [1, 2, 3, 4] as offset}\n      <line class=\"minor\" y1=\"42\" y2=\"45\" transform=\"rotate({6 * (minute + offset)})\" />\n    {/each}\n  {/each}\n\n  <!-- hour hand -->\n  <line class=\"hour\" y1=\"2\" y2=\"-20\" transform=\"rotate({30 * hours + minutes / 2})\" />\n\n  <!-- minute hand -->\n  <line class=\"minute\" y1=\"4\" y2=\"-30\" transform=\"rotate({6 * minutes + seconds / 10})\" />\n\n  <!-- second hand -->\n  <g transform=\"rotate({6 * seconds})\">\n    <line class=\"second\" y1=\"10\" y2=\"-38\" />\n    <line class=\"second-counterweight\" y1=\"10\" y2=\"2\" />\n  </g>\n</svg>\n"]}